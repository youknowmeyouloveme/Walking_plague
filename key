import os
import base64
import random
from cryptography.fernet import Fernet

# Generate a cryptographic "Key to the Abyss"
def generate_key():
    key = Fernet.generate_key()
    return key

# Encrypt a secret message
def encrypt_message(message, key):
    cipher = Fernet(key)
    encrypted_message = cipher.encrypt(message.encode())
    return encrypted_message

# Decrypt a message (if you dare)
def decrypt_message(encrypted_message, key):
    cipher = Fernet(key)
    decrypted_message = cipher.decrypt(encrypted_message).decode()
    return decrypted_message

# Generate the abyss key
abyss_key = generate_key()
encoded_key = base64.urlsafe_b64encode(abyss_key).decode()

# Ominous Messages
abyss_quotes = [
    "You have unlocked a door that should have remained closed...",
    "The abyss whispers your name. Do you listen?",
    "The void is endless, and yet, you hold the key...",
    "This is but the first step into the unknown...",
    "The truth is hidden within, waiting to be unveiled..."
]

# Generate an encrypted message
secret_message = "The abyss is watching..."
encrypted_secret = encrypt_message(secret_message, abyss_key)

# Display the key and a random abyssal phrase
print("🔑 Your Key to the Abyss:", encoded_key)
print("🕳️", random.choice(abyss_quotes))
print("🔒 Encrypted Message:", encrypted_secret.decode())

# (Optional) Try decrypting the message
user_input = input("\nWould you like to unlock the abyss? (yes/no): ").strip().lower()
if user_input == "yes":
    decrypted_secret = decrypt_message(encrypted_secret, abyss_key)
    print("🔓 The Abyss Speaks:", decrypted_secret)
else:
    print("❌ The abyss remains silent...")